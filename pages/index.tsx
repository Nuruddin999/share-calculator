import Head from 'next/head'
import Image from 'next/image'
import DemoImg from '../public/img/split.jpg'
import Link from 'next/link';
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import { Box, Button, Container, Grid, TextField, Typography } from '@mui/material'
import Paper from '@mui/material/Paper';
import { Chart } from "react-google-charts";

type share = {
  name: string,
  money: number,
  procent: number | string,
  id?: number
}

type shareItemType = {
  share: share,
  isBottom?: boolean
}

const ShareItem = ({ share, isBottom }: shareItemType) => {
  return <Paper className={isBottom ? styles.bottompaper : styles.paper} key={share.name}><Grid container spacing={3} justifyContent={'space-around'}>
    {share.id && <Grid item xs={1}>
      <Typography>
        {share.id ? share.id + ')' : ''}
      </Typography>
    </Grid>}
    <Grid item xs={isBottom ? 3 : 12} zeroMinWidth>
      <Typography style={{ overflowWrap: 'break-word' }}>
        {share.name}
      </Typography>
    </Grid>
    <Grid item xs={isBottom ? 6 : 9} sm={5}>
      <Typography align='right' >
        {share.money} руб
      </Typography>
    </Grid>
    <Grid item>
      <Typography align='right' fontWeight={700}>
        {share.procent}%
      </Typography>
    </Grid>
  </Grid>
  </Paper>
}



export default function Home() {
  const [shares, setShares] = useState<Array<share>>([])
  const [chartData, setChartData] = useState<Array<Array<string | number>>>([])
  const [error, setError] = useState('')
  const [partnerName, setPartnerName] = useState('')
  const [partnerSum, setPartnerSum] = useState<number>(0)
  const [totalSum, setTotalSum] = useState<number | null>(null)
  const [totalProc, setTotalProc] = useState('')

  const handleAddPartner = (e) => {
    e.preventDefault()
    let sharesCopy = [...shares]
    let sharesValues = sharesCopy.map((el) => el.name)
    if (sharesValues.indexOf(partnerName) >= 0) {
      setError('Такое имя уже есть ')
      return
    }
    if (partnerSum === 0) {
      return
    }
    let prevValue = totalSum || 0
    setTotalSum(prevValue + partnerSum)
  }

  const toClipBoard = () => {
    let copyText = ''
    shares.forEach((share) => copyText += share.name + "  " + share.money + " руб" + "  " + share.procent + "%" + "\n")
    copyText += "Всего" + " " + totalSum + "руб" + " " + totalProc + "%"
    navigator.clipboard.writeText(copyText)
  }

  useEffect(() => {
    if (totalSum !== null) {
      let sharesCopy = [...shares]
      sharesCopy.push({ name: partnerName, money: partnerSum, procent: 0 })
      let tempProcent = 0
      let processedList = sharesCopy.map((el, index) => {
        let procent = (el.money / totalSum) * 100
        tempProcent += procent
        return {
          money: el.money,
          name: el.name,
          procent: procent.toFixed(2)
        }
      })
      setShares(processedList)
      setTotalProc(tempProcent.toString())

    }
  }, [totalSum])

  useEffect(() => {
    setPartnerName('')
    setPartnerSum(0)
    let list = [["Name", "Money"]]
    let sharesCopy = [...shares]
    for (let index = 0; index < sharesCopy.length; index++) {
      const element = sharesCopy[index];
      list.push([element.name, element.money])
    }
    setChartData(list)

  }, [shares])
  useEffect(() => {
    if (error) {
      setError('')
    }
  }, [partnerName])




  return (
    <>
      <Head>
        <title>Калькулятор долей в деньгах</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container maxWidth='lg'>
          <Grid item>
            <Typography variant='h3' align='center' marginTop={6} className={styles.title} color={'primary'} fontWeight={600}>
              Калькулятор долей в общей сумме денег
            </Typography>
          </Grid>
          <Grid item>
            <Grid container alignItems={'center'}>
              <Grid item xs={12} md={6}>
                <Typography marginTop={3} fontSize={24} className={styles.descr} fontWeight={400} color={'primary'}>
                  Вы вложили  1300000 рублей, ваш друг - 2000000 рублей. Нужно понять у кого какая доля  в общей сумме денег ? Легко !
                </Typography>
                <Typography className={styles.descr} fontSize={24} fontWeight={400} color={'primary'} marginY={2}>
                  Просто введите имя и число (кол-во внесенных денег), нажмите "Добавить" и доля в процентах рассчитается автоматически !
                </Typography>
                <Link href="/main">
                <Button variant='contained' fullWidth>Начать расчет</Button>
                </Link>

              </Grid>
              <Grid item xs={12} md={6}>
                <Image src={DemoImg} alt='Калькулятор процентов' className={styles.demoimg} />
              </Grid>
              <Grid item md={6}>
                {/* <div className={styles.addform}>
                  <Typography variant='h6' align='center'>
                    Добавьте участника и сумму
                  </Typography>
                  <Box margin={3}>
                    <form onSubmit={handleAddPartner}>
                      <Grid container spacing={2} alignItems={'center'} justifyContent={'center'}>
                        <Grid item xs={12}>
                          <TextField
                            margin={'none'}
                            id="standard-basic"
                            label="Введите имя партнера"
                            variant="standard"
                            required
                            size='small'
                            value={partnerName}
                            fullWidth
                            error={Boolean(error)}
                            helperText={error ? error : ''}
                            onChange={(e) => setPartnerName(e.target.value)}
                          />
                        </Grid>
                        <Grid item xs={12}>
                          <TextField
                            margin={'none'}
                            id="standard-basic"
                            label="Введите его сумму"
                            variant="standard"
                            required
                            size='small'
                            value={partnerSum}
                            type='number'
                            fullWidth
                            onChange={(e) => setPartnerSum(parseInt(e.target.value))}
                          />
                        </Grid>
                        <Grid item xs={12} sm={2}>
                          <Button size='small' type='submit'>Добавить</Button>
                        </Grid>
                      </Grid>
                    </form>
                  </Box>
                </div>
                {shares.length > 0 && <div className={styles.listWrapper}>
                  <Button onClick={toClipBoard}>Копировать</Button>

                  {shares.map((share, index) => <ShareItem key={share.name}
                    share={share} />)}


                </div>} */}
              </Grid>
              {/* <Grid item md={6}>
                {shares.length > 0 && <Chart
                  chartType="PieChart"
                  data={chartData}
                  options={{
                    title: "Доли",
                    is3D: true,
                  }}
                  width={"100%"}
                  height={'400px'}
                />}
              </Grid> */}
            </Grid>
          </Grid>
          {/* <div className={styles.bottomBar}>
          {shares.length > 0 && <ShareItem
            share={{ name: "Всего", money: totalSum, procent: 100 }}
            isBottom
          />}
        </div> */}
        </Container>
      </main>
    </>
  )
}
